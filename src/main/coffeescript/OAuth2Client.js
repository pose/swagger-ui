// Generated by CoffeeScript 1.3.3
(function() {
  var OAuth2Client,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  OAuth2Client = (function() {

    OAuth2Client.prototype.options = null;

    OAuth2Client.prototype.authHost = function() {
      return "https://" + this.options.host;
    };

    OAuth2Client.prototype.resourceHost = function() {
      return "https://api." + this.options.host;
    };

    OAuth2Client.prototype.endUserAuthorizationEndpoint = function() {
      return "" + (this.authHost()) + "/authorize";
    };

    OAuth2Client.prototype.token = null;

    function OAuth2Client(options) {
      this.options = options != null ? options : {
        host: "www.ci.habitat.io",
        clientId: 'HELLO'
      };
      this.tokenNotFound = __bind(this.tokenNotFound, this);

      this.tokenFound = __bind(this.tokenFound, this);

      this.endUserAuthorizationEndpoint = __bind(this.endUserAuthorizationEndpoint, this);

      this.resourceHost = __bind(this.resourceHost, this);

      this.authHost = __bind(this.authHost, this);

      this["do"]();
    }

    OAuth2Client.prototype.extractToken = function(hash) {
      var match;
      match = hash.match(/access_token=(\w+)/);
      return !(!match) && match[1];
    };

    OAuth2Client.prototype["do"] = function() {
      if (this.token !== null) {
        return this.tTokenFound();
      } else {
        return this.tokenNotFound();
      }
    };

    OAuth2Client.prototype.tokenFound = function() {
      $('div.authenticated').show();
      $('span.token').text(this.token);
      return $.ajax({
        url: "" + (this.resourceHost()) + "/me",
        beforeSend: function(xhr) {
          xhr.setRequestHeader('Authorization', "OAuth" + this.token);
          return xhr.setRequestHeader('Accept', 'application/json');
        },
        success: function(response) {
          var container, _ref;
          container = $('span.user');
          return container.text((_ref = response != null ? response.username : void 0) != null ? _ref : "An error occurred.");
        }
      });
    };

    OAuth2Client.prototype.tokenNotFound = function() {
      var authUrl, onClick,
        _this = this;
      authUrl = "" + (this.endUserAuthorizationEndpoint()) + "?response_type=code&client_id=" + this.options.clientId + "&redirect_uri=" + window.location;
      console.log('Registering a.connect onClick event');
      onClick = function(event) {
        var windowHandler;
        if (event != null) {
          event.preventDefault();
        }
        windowHandler = window.open(authUrl, 'Authorize', 'height=200,width=150');
        new_window.onbeforeunload = function(event) {
          return _this.token = _this.extractToken(windowHandler.location);
        };
        if (window.focus != null) {
          newwindow.focus();
        }
        return false;
      };
      return $("a.connect").click(onClick);
    };

    return OAuth2Client;

  })();

  window.OAuth2Client = OAuth2Client;

}).call(this);
